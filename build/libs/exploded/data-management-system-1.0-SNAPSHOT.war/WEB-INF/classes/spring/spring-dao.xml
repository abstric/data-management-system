<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:context="http://www.springframework.org/schema/context"
 xsi:schemaLocation="
 http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 配置整合MyBatis -->
	
	<!-- 1.配置数据库相关参数 -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	
	<!-- 2.数据库连接池配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	
		<!-- 2.1 配置连接池属性 -->
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		
		<!-- 2.2 c3p0连接池的私有属性 -->
		<!-- 最大（小）连接 -->
		<property name="maxPoolSize" value="30"/>
		<property name="minPoolSize" value="10"/>
		<!-- 关闭连接后，不自动commit(默认是false) -->
		<!-- <property name="autoCommitOnClose" vlaue="false"/> -->
		<!-- 等待最大连接的超时时间，默认是0，为无限等待 -->
		<property name="checkoutTimeout" value="10000"/>
		<!-- 连接失败的重试次数 -->
		<property name="acquireRetryAttempts" value="2"/>
		
	</bean>
	
	<!-- 3.配置sqlSessionfactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	
		<!-- 3.1 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		
		<!-- 3.2 配置MyBatis的全局配置文件（mybatis-config.xml） -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		
		<!-- 3.3 扫描entity包，使用别名（可以使用；进行多个包的分割） -->
		<property name="typeAliasesPackage" value="com.sdu.www.dms.entity"/>
		
		<!-- 3.4 扫描sql配置文件，mapper目录下的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
		
	</bean>
	
	<!-- 4.配置扫描dao接口包，动态实现dao接口，自动注入到spring的容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		
		<!-- 4.1 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		
		<!-- 4.2 给出需要扫描的dao的包 -->
		<property name="basePackage" value="com.sdu.www.dms.dao"/>
		
	</bean>
	
	<!-- RedisDao -->
	<!--
	<bean id="redisDao" class="com.levi.dao.cache.RedisDao">
		<constructor-arg index="0" value="localhost"/>
		<constructor-arg index="1" value="6379"/>
	</bean>
	-->

</beans>